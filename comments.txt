 Document 1 and 2 sources:
 Sports: https://en.wikipedia.org/wiki/Sport
 1934 FIFA World Cup : https://en.wikipedia.org/wiki/1934_FIFA_World_Cup
 1936 Summer Olympics: https://en.wikipedia.org/wiki/1936_Summer_Olympics
 1936 Winter Olympics: https://en.wikipedia.org/wiki/1936_Winter_Olympics
 2006 FIFA World Cup: https://en.wikipedia.org/wiki/2006_FIFA_World_Cup
 2011 Cricket World Cup Final: https://en.wikipedia.org/wiki/2011_Cricket_World_Cup_Final
 2013–14 Premier League: https://en.wikipedia.org/wiki/2013%E2%80%9314_Premier_League
 2014 FIFA World Cup: https://en.wikipedia.org/wiki/2014_FIFA_World_Cup
 2015 FIFA Womens World Cup: https://en.wikipedia.org/wiki/2015_FIFA_Women%27s_World_Cup
 2015–16 Bundesliga: https://en.wikipedia.org/wiki/2015%E2%80%9316_Bundesliga
 Ancient Olympic Games: https://en.wikipedia.org/wiki/Ancient_Olympic_Games
 
 Computer programming: https://en.wikipedia.org/wiki/Computer_programming
 ACCU (organisation): https://en.wikipedia.org/wiki/ACCU_(organisation)
 ACM Computing Classification System: https://en.wikipedia.org/wiki/ACM_Computing_Classification_System
 Acceptance test–driven development: https://en.wikipedia.org/wiki/Acceptance_test%E2%80%93driven_development
 Adaptive software development: https://en.wikipedia.org/wiki/Adaptive_software_development
 Adele Goldstine: https://en.wikipedia.org/wiki/Adele_Goldstine
 Agile software development:https://en.wikipedia.org/wiki/Agile_software_development
 Alan Kay: https://en.wikipedia.org/wiki/Alan_Kay
 Algorithm: https://en.wikipedia.org/wiki/Algorithm
 Algorithm design:https://en.wikipedia.org/wiki/Algorithm#Design
 Algorithmic efficiency: https://en.wikipedia.org/wiki/Algorithmic_efficiency
 Allen Downey: https://en.wikipedia.org/wiki/Allen_B._Downey
 Analysis of algorithms: https://en.wikipedia.org/wiki/Analysis_of_algorithms
 Analytical Engine: https://en.wikipedia.org/wiki/Analytical_Engine
 Application-release automation: https://en.wikipedia.org/wiki/Application-release_automation
 Big O notation: https://en.wikipedia.org/wiki/Big_O_notation
 Binary numeral system: https://en.wikipedia.org/wiki/Binary_number
 Buffer overflow: https://en.wikipedia.org/wiki/Buffer_overflow
 Build automation: https://en.wikipedia.org/wiki/Build_automation
 Bytecode: https://en.wikipedia.org/wiki/Bytecode
 COBOL: https://en.wikipedia.org/wiki/COBOL
 C (programming language): https://en.wikipedia.org/wiki/C_(programming_language)
 
 
 Generated output:
 Task 1 : Segmentation of composite text document
 ubuntu@ip-172-31-92-18:~/experiments/ITEC-877$ cat newdata/composite.txt | ./segment config/dp.config
[250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 604, 605, 606, 607, 608, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 867, 868, 869, 870, 871, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 1025, 1026, 1027, 1028, 1029, 1395, 1396, 1397, 1398, 1399, 1603, 1604, 1605, 1606, 1607, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1633, 1634, 1635, 1636, 1637, 1638, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2151, 2152, 2153, 2154, 2155, 2166, 2167, 2168, 2169, 2170, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2481, 2482, 2483, 2484, 2485, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2690, 2691, 2692, 2693, 2718, 2719, 2720, 2721]

Task 2: Running the ./eval config/dp.config
ubuntu@ip-172-31-92-18:~/experiments/ITEC-877$ ./eval config/dp.config
{update-params-period=1000, use-duration=false, dirichlet-prior-range=.0001,.1,20,M, remove-stop-words=true, update-lm-period=100, max-burnin-temp=5, careful-debug=false, lambda-b=1, segmenter=edu.mit.nlp.segmenter.dp.BayesWrapper, em-param-search=false, ;;;;;;;;;;=MCMC PARAMS, output-period=100, max-move=50, num-mcmc-moves=100000, window-size=10, phi-b-0=.01, use-fixed-blocks=false, cooling-duration=.25, dirichlet-prior=.2, use-choi-style-boundaries=true, cuephrase-file=config/CUEPHRASES.hl, phi-o-0=.005, num-segs-known=true, window-size-range=10,25,16,A, use-word-stems=true, ;;=em parameters already plugged in..., stop-words=config/STOPWORD.list, burnin-duration=.25, segmentation-dispersion=1, segmentation-dispersion-range=.1,100,20,M, use-extra-features=false, mcem-cuephrases=false, lambda-o=0}
newdata/composite.txt
0.3495 0.4057
0.3495 0.4057

Task 3: Pinging the websites
ubuntu@ip-172-31-92-18:~/experiments/ITEC-877$ ping -c 1 www.theculinaryacademy.org && curl http://checkip.amazonaws.com
PING theculinaryacademy.org (192.185.184.189) 56(84) bytes of data.
64 bytes from 192-185-184-189.unifiedlayer.com (192.185.184.189): icmp_seq=1 ttl=33 time=31.6 ms

--- theculinaryacademy.org ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 31.639/31.639/31.639/0.000 ms
3.92.227.154
